{"version":3,"sources":["webpack:///./src/components/emoji.js","webpack:///./src/templates/blog-post.js"],"names":["Emoji","props","react_default","a","createElement","react_emoji_render_lib","text","children","toString","svg","onlyEmojiClassName","MainContainer","styled","Main","withConfig","displayName","componentId","mixins","sidePadding","CommentsContainer","div","theme","colors","green","HeroContainer","Section","flexCenter","media","tablet","_templateObject","Title","h1","desktop","_templateObject2","_templateObject3","phablet","_templateObject4","phone","_templateObject5","Author","h3","fontSizes","small","fonts","SFMono","_templateObject6","_templateObject7","smallish","Avatar","Img","FeaturedImage","PostBody","Meta","_templateObject8","_templateObject9","Credits","PostLinks","large","_templateObject10","renderAst","rehypeReact","React","components","emoji","editor","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","Compiler","BlogPostTemplate","render","post","this","data","markdownRemark","site","pageContext","previous","next","imgUrl","path","join","frontmatter","featuredImg","childImageSharp","fluid","src","pageUrl","slug","pageTitle","title","siteMetadata","pageDescription","excerpt","layout","location","Helmet_default","itemProp","lang","name","content","tags","property","id","className","timeToRead","map","tag","alt","htmlAst","authorImg","authorName","date","gatsby_browser_entry","to","lib_default","DiscussionEmbed","shortname","config","url","identifier","filePath","Component","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-33e1552b998176782e77.js","sourcesContent":["import React from 'react';\nimport { Twemoji } from 'react-emoji-render';\n\nconst Emoji = props => <Twemoji text={props.children.toString()} svg onlyEmojiClassName=\"emoji\" />;\n\nexport default Emoji;\n","import path from 'path';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport Disqus from 'disqus-react';\nimport Helmet from 'react-helmet';\nimport Loadable from 'react-loadable';\nimport rehypeReact from 'rehype-react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Emoji from '../components/emoji';\nimport { theme, mixins, media, Main, Section } from '../style';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n`;\n\nconst CommentsContainer = styled.div`\n  .reaction-item__button {\n    border-color: ${theme.colors.green};\n  }\n`;\n\nconst HeroContainer = styled(Section)`\n  ${mixins.flexCenter};\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  min-height: 100vh;\n  padding-top: 200px;\n  ${media.tablet`padding-top: 150px;`};\n  div {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 80px;\n  line-height: 1.1;\n  margin: 0;\n  ${media.desktop`font-size: 70px;`};\n  ${media.tablet`font-size: 60px;`};\n  ${media.phablet`font-size: 50px;`};\n  ${media.phone`font-size: 40px;`};\n`;\n\nconst Author = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n`;\n\nconst Avatar = styled(Img)`\n  width: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  margin-right: 10px;\n`;\n\nconst FeaturedImage = styled(Img)`\n  width: 100%;\n  vertical-align: middle;\n  position: relative;\n  border: 3px solid #fff;\n  margin-top: 20px;\n`;\n\nconst PostBody = styled.div`\n  margin-top: 40px;\n  strong {\n    color: white;\n  }\n  .emoji {\n    margin-right: 5px;\n    img {\n      vertical-align: middle;\n    }\n  }\n  ul {\n    list-style-type: '# ';\n    li {\n      margin-block-end: 0.5em;\n      margin-block-start: 0.5em;\n    }\n  }\n  a {\n    color: ${theme.colors.green};\n  }\n  blockquote {\n    border-left: 3px solid;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    margin: 0;\n    margin-bottom: 0px;\n    margin-bottom: 1em;\n    p {\n      margin: 0;\n    }\n  }\n`;\n\nconst Meta = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  word-wrap: break-word;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n  .tag {\n    margin-left: 10px;\n  }\n  .read-time {\n    margin-right: 20px;\n  }\n`;\n\nconst Credits = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\n\nconst PostLinks = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  .next {\n    text-align: right;\n  }\n  .prevous {\n    text-align: left;\n  }\n  .previous,\n  .next {\n    flex: 1;\n    border-radius: 2px;\n    max-width: calc(50% - 15px);\n    padding: 10px 20px;\n    background: #172a45;\n    .title {\n      color: white;\n      font-size: 20px;\n      margin-bottom: 0;\n    }\n    .pos {\n      color: ${theme.colors.green};\n      font-size: ${theme.fontSizes.small};\n      margin-bottom: 5px;\n    }\n    .empty {\n      text-align: center;\n      margin-bottom: 0;\n      position: relative;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    .excerpt {\n      font-size: ${theme.fontSizes.large};\n      margin-bottom: 0px;\n    }\n    ${Meta} {\n      font-size: 12px;\n      margin-bottom: 0;\n    }\n    &:hover {\n      -webkit-transform: translateY(-5px);\n      -ms-transform: translateY(-5px);\n      transform: translateY(-5px);\n      box-shadow: 0 2px 4px rgba(2, 12, 27, 0.9);\n    }\n  }\n  ${media.tablet`\n  flex-direction: column;\n    .next, .previous {\n      max-width: 100%;\n    }\n\n    .previous {\n      margin-bottom: 20px;\n    }\n\n    .next.latest, .previous.first {\n      display: none;\n    }\n  `}\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: {\n    emoji: Emoji,\n    editor: Loadable({\n      loader: () => import('../components/editor'),\n      loading: () => null,\n    }),\n  },\n}).Compiler;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const site = this.props.data.site;\n    const pageContext = this.props.pageContext;\n    const { previous, next } = pageContext;\n\n    const imgUrl =\n      'https://' + path.join('naman.sh/', post.frontmatter.featuredImg.childImageSharp.fluid.src);\n    const pageUrl = 'https://' + path.join('naman.sh/', post.frontmatter.slug, '/');\n    const pageTitle = post.frontmatter.title + ' | ' + site.siteMetadata.title;\n    const pageDescription = post.excerpt;\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet>\n          <title itemProp=\"name\" lang=\"en\">\n            {pageTitle}\n          </title>\n          <meta name=\"description\" content={pageDescription} />\n          <meta name=\"keywords\" content={(post.frontmatter.tags || []).join(',')} />\n          <meta property=\"og:title\" content={pageTitle} />\n          <meta property=\"og:description\" content={pageDescription} />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content={pageUrl} />\n          <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n          <meta property=\"og:image\" content={imgUrl} />\n          <meta itemProp=\"name\" content={site.siteMetadata.title} />\n          <meta itemProp=\"description\" content={pageDescription} />\n          <meta itemProp=\"image\" content={imgUrl} />\n          <meta name=\"twitter:url\" content={pageUrl} />\n          <meta name=\"twitter:title\" content={pageTitle} />\n          <meta name=\"twitter:description\" content={pageDescription} />\n          <meta name=\"twitter:image:src\" content={imgUrl} />\n          <meta name=\"twitter:image:alt\" content={pageTitle} />\n        </Helmet>\n        <MainContainer id=\"content\">\n          <HeroContainer>\n            <Title>{post.frontmatter.title}</Title>\n            <div>\n              <Meta>\n                <span className=\"read-time\">\n                  {post.timeToRead} Min{post.timeToRead > 1 ? 's' : ''} Read\n                </span>\n                {(post.frontmatter.tags || []).map(tag => (\n                  <span className=\"tag\">#{tag}</span>\n                ))}\n              </Meta>\n            </div>\n            <FeaturedImage\n              fluid={post.frontmatter.featuredImg.childImageSharp.fluid}\n              alt={post.frontmatter.title}\n            />\n            <PostBody>{renderAst(post.htmlAst)}</PostBody>\n            <Credits>\n              <Avatar fluid={post.frontmatter.authorImg.childImageSharp.fluid} alt=\"Avatar\" />\n              <Author>\n                By {post.frontmatter.authorName} on {post.frontmatter.date}\n              </Author>\n            </Credits>\n            <PostLinks>\n              {previous ? (\n                <Link className={'previous'} to={previous.frontmatter.slug}>\n                  <p className=\"pos\">{'<< previous'}</p>\n                  <h3 className=\"title\">{previous.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{previous.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {previous.timeToRead} {previous.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(previous.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"previous first\">\n                  <p className=\"empty\">This is the first post.</p>\n                </div>\n              )}\n              {next ? (\n                <Link className={'next'} to={next.frontmatter.slug}>\n                  <p className=\"pos\">{'next >>'}</p>\n                  <h3 className=\"title\">{next.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{next.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {next.timeToRead} {next.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(next.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"next latest\">\n                  <p className=\"empty\">This is the latest post</p>\n                </div>\n              )}\n            </PostLinks>\n            <CommentsContainer>\n              <Disqus.DiscussionEmbed\n                shortname={'naman-kumar'}\n                config={{\n                  url: 'https://naman.sh' + post.frontmatter.slug,\n                  identifier: pageContext.filePath,\n                  title: post.frontmatter.title,\n                }}\n              />\n            </CommentsContainer>\n          </HeroContainer>\n        </MainContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      htmlAst\n      timeToRead\n      frontmatter {\n        title\n        slug\n        show\n        tags\n        date\n        authorName\n        featuredImg {\n          childImageSharp {\n            fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              src\n            }\n          }\n        }\n        authorImg {\n          childImageSharp {\n            fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}