{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/blogPosts.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_blogPosts__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_style__WEBPACK_IMPORTED_MODULE_5__","MainContainer","styled","Main","withConfig","displayName","componentId","mixins","sidePadding","BlogPage","_ref","data","location","a","createElement","id","blogPosts","edges","long","propTypes","PropTypes","object","isRequired","BlogPostsContainer","Section","flexCenter","BlogPostsTitle","h4","theme","fontSizes","h3","media","tablet","_templateObject","BlogPostsGrid","div","desktop","_templateObject2","PostExcerpt","borderRadius","transition","colors","lightNavy","green","PicContainer","_templateObject3","phablet","_templateObject4","Avatar","Img","AvatarContainer","navy","BlogPost","shadowNavy","darkestNavy","PostTitle","h5","lightestSlate","_templateObject5","_templateObject6","Meta","small","fonts","SFMono","_templateObject7","_templateObject8","smallish","AuthorAvatar","ShowMoreButton","Button","bigButton","BlogPosts","props","_this","_Component","call","this","revealRefs","GRID_LIMIT","componentDidMount","ScrollReveal","reveal","featured","config","srConfig","forEach","ref","render","_this2","_this$props","filter","index","node","frontmatter","show","length","react__WEBPACK_IMPORTED_MODULE_4___default","innerRef","el","projects","react_transition_group__WEBPACK_IMPORTED_MODULE_8__","className","map","_ref2","i","key","classNames","timeout","exit","style","transitionDelay","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","slug","title","slice","timeToRead","tags","tag","excerpt","fluid","authorImg","childImageSharp","alt","authorName","date","featuredImg","onClick","window","pathname","Component","array"],"mappings":"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","file":"component---src-pages-blog-js-a9b633779b1c2aa6f99c.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/layout';\nimport BlogPosts from '../components/blogPosts';\n\nimport styled from 'styled-components';\nimport { mixins, Main } from '../style';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n  background-image: linear-gradient(to bottom, #020c1b 200px, #0a192f 550px);\n  min-height: 100vh;\n`;\n\nconst BlogPage = ({ data, location }) => (\n  <Layout location={location}>\n    <MainContainer id=\"content\">\n      <BlogPosts data={data.blogPosts.edges} long={true} />\n    </MainContainer>\n  </Layout>\n);\n\nBlogPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object,\n};\n\nexport default BlogPage;\n\nexport const query = graphql`\n  query BlogPageQuery {\n    blogPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 100\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            slug\n            tags\n            show\n            authorName\n            authorImg {\n              childImageSharp {\n                fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            featuredImg {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n          timeToRead\n          excerpt(pruneLength: 300)\n          html\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport config from '../config';\n\nimport { IconGithub, IconExternal } from './icons';\n\nimport styled from 'styled-components';\nimport { theme, mixins, media, Section, H3, Ul, A, Button } from '../style';\n\nimport ScrollReveal from 'scrollreveal';\n\nconst BlogPostsContainer = styled(Section)`\n  ${mixins.flexCenter};\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst BlogPostsTitle = styled.h4`\n  margin: 0 auto 50px;\n  font-size: ${theme.fontSizes.h3};\n  ${media.tablet`font-size: 24px;`};\n  a {\n    display: block;\n  }\n`;\n\nconst BlogPostsGrid = styled.div`\n  .blogPosts {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-gap: 15px;\n    position: relative;\n    ${media.desktop`\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    `};\n  }\n`;\n\nconst PostExcerpt = styled.div`\n  position: relative;\n  padding: 25px;\n  margin-top: 15px;\n  margin-bottom: 10px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: ${theme.borderRadius};\n  transition: ${theme.transition};\n  background-color: ${theme.colors.lightNavy};\n  a {\n    color: ${theme.colors.green};\n  }\n`;\n\nconst PicContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 300px;\n  margin-left: 60px;\n  ${media.tablet`margin: 60px auto 0;`};\n  ${media.phablet`width: 70%;`};\n`;\n\nconst Avatar = styled(Img)`\n  width: 100%;\n  max-width: 100%;\n  vertical-align: middle;\n  position: relative;\n  mix-blend-mode: multiply;\n  filter: grayscale(100%) contrast(1);\n  border-radius: ${theme.borderRadius};\n  transition: ${theme.transition};\n`;\n\nconst AvatarContainer = styled.div`\n  width: 100%;\n  position: relative;\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.green};\n  margin-left: -20px;\n  &:hover,\n  &:focus {\n    background: transparent;\n    &:after {\n      top: 15px;\n      left: 15px;\n    }\n    ${Avatar} {\n      filter: none;\n      mix-blend-mode: normal;\n    }\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    transition: ${theme.transition};\n    background-color: ${theme.colors.navy};\n    mix-blend-mode: screen;\n    border-radius: ${theme.borderRadius};\n  }\n  &:after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    border: 2px solid ${theme.colors.green};\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    z-index: -1;\n    transition: ${theme.transition};\n    border-radius: ${theme.borderRadius};\n  }\n`;\n\nconst BlogPost = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  transition: ${theme.transition};\n  &:hover,\n  &:focus {\n    ${PostExcerpt} {\n      transform: translateY(-5px);\n      box-shadow: 0 2px 4px ${theme.colors.shadowNavy};\n      box-shadow: 0 19px 38px ${theme.colors.darkestNavy} 0 15px 12px ${theme.colors.shadowNavy};\n    }\n    ${AvatarContainer} {\n      background: transparent;\n      &:after {\n        top: 15px;\n        left: 15px;\n      }\n      ${Avatar} {\n        filter: none;\n        mix-blend-mode: normal;\n      }\n    }\n  }\n  .left {\n    flex: 7;\n  }\n  .right {\n    flex 3;\n  }\n`;\n\nconst PostTitle = styled.h5`\n  max-width: 100%;\n  font-size: 28px;\n  font-weight: 600;\n  margin: 0;\n  color: ${theme.colors.lightestSlate};\n  ${media.tablet`font-size: 24px;`};\n  a {\n    ${media.tablet`display: block;`};\n  }\n`;\n\nconst Meta = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n  .tag {\n    margin-left: 10px;\n  }\n  .read-time {\n    margin-right: 20px;\n  }\n`;\n\nconst AuthorAvatar = styled(Img)`\n  width: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  margin-right: 10px;\n`;\n\nconst ShowMoreButton = styled(Button)`\n  ${mixins.bigButton};\n  margin: 100px auto 0;\n`;\n\nclass BlogPosts extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.revealRefs = [];\n    this.GRID_LIMIT = props.long ? 100 : 6;\n  }\n\n  componentDidMount() {\n    ScrollReveal().reveal(this.featured, config.srConfig());\n    this.revealRefs.forEach(ref => ScrollReveal().reveal(ref, config.srConfig()));\n  }\n\n  render() {\n    const { data, long } = this.props;\n    const blogPosts = data.filter(\n      ({ node }, index) => node.frontmatter.show === 'true' && index < this.GRID_LIMIT,\n    );\n\n    if (!blogPosts.length) {\n      return null;\n    }\n\n    return (\n      <BlogPostsContainer id=\"blog\">\n        <BlogPostsTitle innerRef={el => (this.projects = el)}>Latest Posts</BlogPostsTitle>\n        <BlogPostsGrid>\n          <TransitionGroup className=\"blog-posts\">\n            {blogPosts.map(({ node }, i) => (\n              <CSSTransition\n                key={i}\n                classNames=\"fadeup\"\n                timeout={i >= this.GRID_LIMIT ? (i - this.GRID_LIMIT) * 300 : 300}\n                exit={false}>\n                <BlogPost\n                  key={i}\n                  innerRef={el => (this.revealRefs[i] = el)}\n                  style={{\n                    transitionDelay: `${i >= this.GRID_LIMIT ? (i - this.GRID_LIMIT) * 100 : 0}ms`,\n                  }}>\n                  <div className=\"left\">\n                    <PostTitle>\n                      <Link to={node.frontmatter.slug + '/'}>\n                        {node.frontmatter.title.slice(0, 110)}\n                        {node.frontmatter.title.length > 110 ? '...' : ''}\n                      </Link>\n                    </PostTitle>\n                    <div>\n                      <Meta>\n                        <span className=\"read-time\">\n                          {node.timeToRead} Min{node.timeToRead > 1 ? 's' : ''} Read\n                        </span>\n                        {(node.frontmatter.tags || []).map(tag => (\n                          <span className=\"tag\">#{tag}</span>\n                        ))}\n                      </Meta>\n                    </div>\n                    <PostExcerpt>\n                      {node.excerpt} <Link to={node.frontmatter.slug + '/'}>Read more >></Link>\n                    </PostExcerpt>\n                    <div>\n                      <AuthorAvatar\n                        fluid={node.frontmatter.authorImg.childImageSharp.fluid}\n                        alt=\"Avatar\"\n                      />\n                      <Meta>\n                        By {node.frontmatter.authorName} at {node.frontmatter.date}\n                      </Meta>\n                    </div>\n                  </div>\n                  <div className=\"right\">\n                    <PicContainer>\n                      <AvatarContainer>\n                        <Avatar\n                          fluid={node.frontmatter.featuredImg.childImageSharp.fluid}\n                          alt=\"Avatar\"\n                        />\n                      </AvatarContainer>\n                    </PicContainer>\n                  </div>\n                </BlogPost>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </BlogPostsGrid>\n        {!long && (\n          <ShowMoreButton\n            onClick={() => {\n              window.location.pathname = '/blog/';\n            }}>\n            More Posts\n          </ShowMoreButton>\n        )}\n      </BlogPostsContainer>\n    );\n  }\n}\n\nexport default BlogPosts;\n"],"sourceRoot":""}