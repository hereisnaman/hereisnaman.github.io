{"version":3,"sources":["webpack:///./src/components/emoji.js","webpack:///./src/templates/blog-post.js"],"names":["Emoji","props","react_default","a","createElement","react_emoji_render_lib","text","children","toString","svg","onlyEmojiClassName","MainContainer","styled","Main","withConfig","displayName","componentId","mixins","sidePadding","HeroContainer","Section","flexCenter","media","tablet","_templateObject","Title","h1","desktop","_templateObject2","_templateObject3","phablet","_templateObject4","phone","_templateObject5","Author","h3","theme","colors","green","fontSizes","medium","fonts","SFMono","_templateObject6","small","_templateObject7","smallish","Avatar","Img","FeaturedImage","PostBody","div","Meta","_templateObject8","_templateObject9","Credits","renderAst","rehypeReact","React","components","emoji","Compiler","BlogPostTemplate","render","post","this","data","markdownRemark","site","pageContext","imgUrl","path","join","siteMetadata","siteUrl","frontmatter","featuredImg","childImageSharp","fluid","src","pageUrl","slug","pageTitle","title","pageDescription","excerpt","layout","location","Helmet_default","itemProp","lang","name","content","tags","property","id","className","timeToRead","map","tag","alt","htmlAst","authorImg","authorName","date","lib_default","DiscussionEmbed","shortname","config","url","identifier","filePath","Component","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-5409c46da06098871f7f.js","sourcesContent":["import React from 'react';\nimport { Twemoji } from 'react-emoji-render';\n\nconst Emoji = props => <Twemoji text={props.children.toString()} svg onlyEmojiClassName=\"emoji\" />;\n\nexport default Emoji;\n","import path from 'path';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport { graphql } from 'gatsby';\nimport Disqus from 'disqus-react';\nimport Helmet from 'react-helmet';\nimport rehypeReact from 'rehype-react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Emoji from '../components/emoji';\nimport { theme, mixins, media, Main, Section } from '../style';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n  background-image: linear-gradient(to bottom, #020c1b 200px, #0a192f 550px);\n`;\n\nconst HeroContainer = styled(Section)`\n  ${mixins.flexCenter};\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  min-height: 100vh;\n  padding-top: 200px;\n  ${media.tablet`padding-top: 150px;`};\n  div {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 80px;\n  line-height: 1.1;\n  margin: 0;\n  ${media.desktop`font-size: 70px;`};\n  ${media.tablet`font-size: 60px;`};\n  ${media.phablet`font-size: 50px;`};\n  ${media.phone`font-size: 40px;`};\n`;\n\nconst Author = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.medium};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n`;\n\nconst Avatar = styled(Img)`\n  width: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  margin-right: 10px;\n`;\n\nconst FeaturedImage = styled(Img)`\n  width: 100%;\n  vertical-align: middle;\n  position: relative;\n  border: 3px solid #fff;\n  margin-top: 20px;\n`;\n\nconst PostBody = styled.div`\n  margin-top: 40px;\n  strong {\n    color: white;\n  }\n  .emoji {\n    margin-right: 5px;\n    img {\n      vertical-align: middle;\n    }\n  }\n  ul {\n    list-style-type: '# ';\n    li {\n      margin-block-end: 0.5em;\n      margin-block-start: 0.5em;\n    }\n  }\n  a {\n    color: ${theme.colors.green};\n  }\n`;\n\nconst Meta = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.medium};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n  .tag {\n    margin-left: 10px;\n  }\n  .read-time {\n    margin-right: 20px;\n  }\n`;\n\nconst Credits = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { emoji: Emoji },\n}).Compiler;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const site = this.props.data.site;\n    const pageContext = this.props.pageContext;\n\n    const imgUrl = path.join(\n      site.siteMetadata.siteUrl,\n      post.frontmatter.featuredImg.childImageSharp.fluid.src,\n    );\n    const pageUrl = path.join(site.siteMetadata.siteUrl, post.frontmatter.slug, '/');\n    const pageTitle = post.frontmatter.title + ' | ' + site.siteMetadata.title;\n    const pageDescription = post.excerpt;\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet>\n          <title itemProp=\"name\" lang=\"en\">\n            {pageTitle}\n          </title>\n          <meta name=\"description\" content={pageDescription} />\n          <meta name=\"keywords\" content={(post.frontmatter.tags || []).join(',')} />\n          <meta property=\"og:title\" content={pageTitle} />\n          <meta property=\"og:description\" content={pageDescription} />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content={pageUrl} />\n          <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n          <meta property=\"og:image\" content={imgUrl} />\n          <meta itemProp=\"name\" content={site.siteMetadata.title} />\n          <meta itemProp=\"description\" content={pageDescription} />\n          <meta itemProp=\"image\" content={imgUrl} />\n          <meta name=\"twitter:url\" content={pageUrl} />\n          <meta name=\"twitter:title\" content={pageTitle} />\n          <meta name=\"twitter:description\" content={pageDescription} />\n          <meta name=\"twitter:image:src\" content={imgUrl} />\n          <meta name=\"twitter:image:alt\" content={pageTitle} />\n        </Helmet>\n        <MainContainer id=\"content\">\n          <HeroContainer>\n            <Title>{post.frontmatter.title}</Title>\n            <div>\n              <Meta>\n                <span className=\"read-time\">\n                  {post.timeToRead} Min{post.timeToRead > 1 ? 's' : ''} Read\n                </span>\n                {(post.frontmatter.tags || []).map(tag => (\n                  <span className=\"tag\">#{tag}</span>\n                ))}\n              </Meta>\n            </div>\n            <FeaturedImage\n              fluid={post.frontmatter.featuredImg.childImageSharp.fluid}\n              alt={post.frontmatter.title}\n            />\n            <PostBody>{renderAst(post.htmlAst)}</PostBody>\n            <Credits>\n              <Avatar fluid={post.frontmatter.authorImg.childImageSharp.fluid} alt=\"Avatar\" />\n              <Author>\n                By {post.frontmatter.authorName} at {post.frontmatter.date}\n              </Author>\n            </Credits>\n            <Disqus.DiscussionEmbed\n              shortname={'naman-kumar'}\n              config={{\n                url: 'https://naman.sh' + post.frontmatter.slug,\n                identifier: pageContext.filePath,\n                title: post.frontmatter.title,\n              }}\n            />\n          </HeroContainer>\n        </MainContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      htmlAst\n      timeToRead\n      frontmatter {\n        title\n        slug\n        show\n        tags\n        date\n        authorName\n        featuredImg {\n          childImageSharp {\n            fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              src\n            }\n          }\n        }\n        authorImg {\n          childImageSharp {\n            fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}