{"version":3,"sources":["webpack:///./src/components/emoji.js","webpack:///./src/components/image.js","webpack:///./src/components/bubbleLine.js","webpack:///./src/components/chartCard.js","webpack:///./src/templates/blog-post.js"],"names":["Emoji","props","react_default","a","createElement","react_emoji_render_lib","text","children","toString","svg","onlyEmojiClassName","ImageBox","styled","div","withConfig","displayName","componentId","theme","colors","white","fontSizes","medium","Image","render","_this$props","this","caption","alt","src","layout","console","log","className","React","Component","BubbleLineWrap","LineLabel","span","Line","media","tablet","_templateObject","BubbleRow","Bubble","green","BubbleLine","_ref","label","total","selected","bubbles","i","Number","push","Card","chartCard_templateObject","ChartCard","MainContainer","Main","mixins","sidePadding","CommentsContainer","HeroContainer","Section","flexCenter","blog_post_templateObject","Title","h1","desktop","_templateObject2","_templateObject3","phablet","_templateObject4","phone","_templateObject5","Author","h3","small","fonts","SFMono","_templateObject6","_templateObject7","smallish","Avatar","Img","FeaturedImage","PostBody","_templateObject8","Meta","_templateObject9","_templateObject10","Credits","PostLinks","large","_templateObject11","renderAst","rehypeReact","components","emoji","editor","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","image-box","bubble-line","chart-card","Compiler","BlogPostTemplate","post","data","markdownRemark","site","pageContext","previous","next","imgUrl","path","join","frontmatter","featuredImg","childImageSharp","fluid","pageUrl","slug","pageTitle","title","siteMetadata","pageDescription","excerpt","components_layout","location","Helmet_default","itemProp","lang","name","content","tags","property","id","timeToRead","map","tag","htmlAst","authorImg","authorName","date","gatsby_browser_entry","to","lib_default","DiscussionEmbed","shortname","config","url","identifier","filePath","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-63e9734651fc1f362aa6.js","sourcesContent":["import React from 'react';\nimport { Twemoji } from 'react-emoji-render';\n\nconst Emoji = props => <Twemoji text={props.children.toString()} svg onlyEmojiClassName=\"emoji\" />;\n\nexport default Emoji;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { theme, media } from '../style';\n\nconst ImageBox = styled.div`\n  display: block;\n  text-align: center;\n  margin-bottom: 0.5em;\n\n  img {\n    max-width: 100%;\n    display: inline-block;\n    border: 3px solid #fff;\n  }\n\n  .caption {\n    display: block;\n    color: ${theme.colors.white};\n    font-size: ${theme.fontSizes.medium};\n  }\n\n  &.inline-left {\n    display: inline-block;\n    float: left;\n    width: unset;\n    margin-right: 1em;\n    margin-bottom: 0;\n  }\n`;\n\nclass Image extends React.Component {\n  render() {\n    const { caption, alt, src, layout } = this.props;\n    console.log(this.props);\n\n    return (\n      <ImageBox className={layout}>\n        <img alt={alt || caption} src={src} />\n        <span className=\"caption\">{caption}</span>\n      </ImageBox>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main, Section } from '../style';\n\nconst BubbleLineWrap = styled.div`\n  width: unset !important;\n  margin-bottom: 1em;\n  text-align: left;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst LineLabel = styled.span`\n  flex: 1;\n  color: ${theme.colors.white};\n  font-size: 18px;\n  line-height: 30px;\n  vertical-align: middle;\n`;\n\nconst Line = styled.div`\n  display: flex;\n  ${media.tablet`\n    display: block;\n  `};\n`;\n\nconst BubbleRow = styled.div`\n  flex: 3;\n`;\n\nconst Bubble = styled.div`\n  display: inline-block;\n  margin-right: 1em;\n  width: 30px !important;\n  height: 30px;\n  border: 1px solid rgba(100, 255, 218, 0.5);\n  background: rgba(100, 255, 218, 0.07);\n  border-radius: 50%;\n  cursor: pointer;\n\n  &.selected {\n    border-color: ${theme.colors.green};\n    background: ${theme.colors.green};\n  }\n`;\n\nconst BubbleLine = ({ label, total, selected }) => {\n  const bubbles = [];\n\n  for (let i = 0; i < Number(total); i++) {\n    bubbles.push(<Bubble className={i < Number(selected) ? 'selected' : ''} />);\n  }\n\n  return (\n    <BubbleLineWrap>\n      <Line>\n        <LineLabel>{label}</LineLabel>\n        <BubbleRow>{bubbles}</BubbleRow>\n      </Line>\n    </BubbleLineWrap>\n  );\n};\n\nexport default BubbleLine;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main, Section } from '../style';\n\nconst Card = styled.div`\n  max-width: 80%;\n  margin: 50px auto;\n\n  ${media.tablet`\n    max-width: 100%;\n  `};\n\n  .wrap {\n    position: relative;\n    padding: 30px;\n    border-radius: 4px;\n    background: #172a45;\n    box-shadow: 0 0 140px rgba(255, 255, 255, 0.05);\n  }\n`;\n\nconst ChartCard = ({ children }) => (\n  <Card>\n    <div className=\"wrap\">{children}</div>\n  </Card>\n);\n\nexport default ChartCard;\n","import path from 'path';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport Disqus from 'disqus-react';\nimport Helmet from 'react-helmet';\nimport Loadable from 'react-loadable';\nimport rehypeReact from 'rehype-react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Emoji from '../components/emoji';\nimport Image from '../components/image';\nimport BubbleLine from '../components/bubbleLine';\nimport ChartCard from '../components/chartCard';\nimport { theme, mixins, media, Main, Section } from '../style';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n`;\n\nconst CommentsContainer = styled.div`\n  .reaction-item__button {\n    border-color: ${theme.colors.green};\n  }\n`;\n\nconst HeroContainer = styled(Section)`\n  ${mixins.flexCenter};\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  min-height: 100vh;\n  padding-top: 200px;\n  ${media.tablet`padding-top: 150px;`};\n  div {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 80px;\n  line-height: 1.1;\n  margin: 0;\n  ${media.desktop`font-size: 70px;`};\n  ${media.tablet`font-size: 60px;`};\n  ${media.phablet`font-size: 50px;`};\n  ${media.phone`font-size: 40px;`};\n`;\n\nconst Author = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n`;\n\nconst Avatar = styled(Img)`\n  width: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  margin-right: 10px;\n`;\n\nconst FeaturedImage = styled(Img)`\n  width: 100%;\n  vertical-align: middle;\n  position: relative;\n  border: 3px solid #fff;\n  margin-top: 20px;\n`;\n\nconst PostBody = styled.div`\n  margin-top: 40px;\n  strong {\n    color: white;\n  }\n  .emoji {\n    margin-right: 5px;\n    img {\n      vertical-align: middle;\n    }\n  }\n  ul {\n    list-style-type: '# ';\n  }\n  ul,\n  ol {\n    li {\n      margin-block-end: 0.5em;\n      margin-block-start: 0.5em;\n    }\n    ${media.phone`\n    padding-inline-start: 15px;\n  `};\n  }\n  a {\n    color: ${theme.colors.green};\n  }\n  blockquote {\n    border-left: 3px solid;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    margin: 0;\n    margin-bottom: 0px;\n    margin-bottom: 1em;\n    p {\n      margin: 0;\n    }\n  }\n  ol {\n    li {\n      list-style: none;\n      counter-increment: item 1;\n      &::before {\n        content: '0' counter(item) '.';\n        text-align: right;\n        color: #64ffda;\n        margin-right: 0.5em;\n        font-size: 14px;\n        font-family: SF Mono, Fira Code, Fira Mono, monospace;\n      }\n    }\n  }\n`;\n\nconst Meta = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  word-wrap: break-word;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n  .tag {\n    margin-left: 10px;\n  }\n  .read-time {\n    margin-right: 20px;\n  }\n`;\n\nconst Credits = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\n\nconst PostLinks = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  .next {\n    text-align: right;\n  }\n  .prevous {\n    text-align: left;\n  }\n  .previous,\n  .next {\n    flex: 1;\n    border-radius: 2px;\n    max-width: calc(50% - 15px);\n    padding: 10px 20px;\n    background: #172a45;\n    .title {\n      color: white;\n      font-size: 20px;\n      margin-bottom: 0;\n    }\n    .pos {\n      color: ${theme.colors.green};\n      font-size: ${theme.fontSizes.small};\n      margin-bottom: 5px;\n    }\n    .empty {\n      text-align: center;\n      margin-bottom: 0;\n      position: relative;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    .excerpt {\n      font-size: ${theme.fontSizes.large};\n      margin-bottom: 0px;\n    }\n    ${Meta} {\n      font-size: 12px;\n      margin-bottom: 0;\n    }\n    &:hover {\n      -webkit-transform: translateY(-5px);\n      -ms-transform: translateY(-5px);\n      transform: translateY(-5px);\n      box-shadow: 0 2px 4px rgba(2, 12, 27, 0.9);\n    }\n  }\n  ${media.tablet`\n  flex-direction: column;\n    .next, .previous {\n      max-width: 100%;\n    }\n\n    .previous {\n      margin-bottom: 20px;\n    }\n\n    .next.latest, .previous.first {\n      display: none;\n    }\n  `}\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: {\n    emoji: Emoji,\n    editor: Loadable({\n      loader: () => import('../components/editor'),\n      loading: () => null,\n    }),\n    'image-box': Image,\n    'bubble-line': BubbleLine,\n    'chart-card': ChartCard,\n  },\n}).Compiler;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const site = this.props.data.site;\n    const pageContext = this.props.pageContext;\n    const { previous, next } = pageContext;\n\n    const imgUrl =\n      'https://' + path.join('naman.sh/', post.frontmatter.featuredImg.childImageSharp.fluid.src);\n    const pageUrl = 'https://' + path.join('naman.sh/', post.frontmatter.slug, '/');\n    const pageTitle = post.frontmatter.title + ' | ' + site.siteMetadata.title;\n    const pageDescription = post.excerpt;\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet>\n          <title itemProp=\"name\" lang=\"en\">\n            {pageTitle}\n          </title>\n          <meta name=\"description\" content={pageDescription} />\n          <meta name=\"keywords\" content={(post.frontmatter.tags || []).join(',')} />\n          <meta property=\"og:title\" content={pageTitle} />\n          <meta property=\"og:description\" content={pageDescription} />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content={pageUrl} />\n          <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n          <meta property=\"og:image\" content={imgUrl} />\n          <meta itemProp=\"name\" content={site.siteMetadata.title} />\n          <meta itemProp=\"description\" content={pageDescription} />\n          <meta itemProp=\"image\" content={imgUrl} />\n          <meta name=\"twitter:url\" content={pageUrl} />\n          <meta name=\"twitter:title\" content={pageTitle} />\n          <meta name=\"twitter:description\" content={pageDescription} />\n          <meta name=\"twitter:image:src\" content={imgUrl} />\n          <meta name=\"twitter:image:alt\" content={pageTitle} />\n        </Helmet>\n        <MainContainer id=\"content\">\n          <HeroContainer>\n            <Title>{post.frontmatter.title}</Title>\n            <div>\n              <Meta>\n                <span className=\"read-time\">\n                  {post.timeToRead} Min{post.timeToRead > 1 ? 's' : ''} Read\n                </span>\n                {(post.frontmatter.tags || []).map(tag => (\n                  <span className=\"tag\">#{tag}</span>\n                ))}\n              </Meta>\n            </div>\n            <FeaturedImage\n              fluid={post.frontmatter.featuredImg.childImageSharp.fluid}\n              alt={post.frontmatter.title}\n            />\n            <PostBody>{renderAst(post.htmlAst)}</PostBody>\n            <Credits>\n              <Avatar fluid={post.frontmatter.authorImg.childImageSharp.fluid} alt=\"Avatar\" />\n              <Author>\n                By {post.frontmatter.authorName} on {post.frontmatter.date}\n              </Author>\n            </Credits>\n            <PostLinks>\n              {previous ? (\n                <Link className={'previous'} to={previous.frontmatter.slug}>\n                  <p className=\"pos\">{'<< previous'}</p>\n                  <h3 className=\"title\">{previous.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{previous.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {previous.timeToRead} {previous.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(previous.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"previous first\">\n                  <p className=\"empty\">This is the first post.</p>\n                </div>\n              )}\n              {next ? (\n                <Link className={'next'} to={next.frontmatter.slug}>\n                  <p className=\"pos\">{'next >>'}</p>\n                  <h3 className=\"title\">{next.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{next.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {next.timeToRead} {next.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(next.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"next latest\">\n                  <p className=\"empty\">This is the latest post</p>\n                </div>\n              )}\n            </PostLinks>\n            <CommentsContainer>\n              <Disqus.DiscussionEmbed\n                shortname={'naman-kumar'}\n                config={{\n                  url: 'https://naman.sh' + post.frontmatter.slug,\n                  identifier: pageContext.filePath,\n                  title: post.frontmatter.title,\n                }}\n              />\n            </CommentsContainer>\n          </HeroContainer>\n        </MainContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      htmlAst\n      timeToRead\n      frontmatter {\n        title\n        slug\n        show\n        tags\n        date\n        authorName\n        featuredImg {\n          childImageSharp {\n            fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              src\n            }\n          }\n        }\n        authorImg {\n          childImageSharp {\n            fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}